using Assets.Script;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Net.Sockets;
using UnityEngine;

public class ClientSocket : MonoBehaviour 
{

    private static byte[] result = new byte[1024];//指定接受长度
    private static Socket clientSocket;//创建客户端socket
    public bool IsConnected = false;//是否已连接标识

    public ClientSocket()
    {
        clientSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream,ProtocolType.Tcp);
    }

    /// <summary>
    /// 连接指定ip和端口的服务器
    /// </summary>
    /// <param name="ip"></param>
    /// <param name="port"></param>
    public void ConnectServer(string ip, int port)
    {
        IPAddress mIp = IPAddress.Parse(ip);
        IPEndPoint ip_end_point = new IPEndPoint(mIp, port);

        try
        {
            clientSocket.Connect(ip_end_point);
            IsConnected = true;
            Debug.Log("服务器连接成功");
        }
        catch
        {
            IsConnected = false;
            Debug.Log("服务器连接失败");
            return;
        }

        int receiveLength = clientSocket.Receive(result);
        ByteBuffer buffer = new ByteBuffer(result);
        int len = buffer.ReadShort();//数据长度
        string data = buffer.ReadString();//数据内容
        Debug.Log("服务器返回数据"+data);
    }
    public void SendMessage(string data)
    {
        if (IsConnected == false)
        {
            return;
        }
        try
        {
            ByteBuffer buffer = new ByteBuffer();
            buffer.WriteString(data);
            clientSocket.Send(WriteMessage(buffer.ToBytes()));
        }
        catch
        {
            IsConnected = false;
            clientSocket.Shutdown(SocketShutdown.Both);
            clientSocket.Close();
        }
    }
    private static byte[] WriteMessage(byte[] message)
    {
        MemoryStream ms = null;
        using(ms=new MemoryStream())
        {
            ms.Position=0;
            BinaryWriter writer=new BinaryWriter(ms);
            ushort msglen=(ushort)message.Length;
            writer.Write(msglen);
            writer.Write(message);
            writer.Flush();
            return ms.ToArray();
        }
    }

}
